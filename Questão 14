// a função qsortpermite ordenar qualquer tipo de vetor (int, float, string, struct, etc).
#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b){
  if ( *(float*)a <  *(float*)b ) return -1;//se a for menor que b, retorna -1
  if ( *(float*)a == *(float*)b ) return 0;// se a for equivalente a b, retorna 0
  if ( *(float*)a >  *(float*)b ) return 1;//se a for maior que b, retorna 1
}//criterios de comparação 

int main(void) {
 int n; // quantidade de valores
 float *p;//ponteiro para apontar o endereço de n

 printf("digite a quantidade de valores:\n");//pede a quantidade de valores
 scanf("%d", &n);//armezena a quantidade de valores

 p = malloc(n*sizeof(float));//aloca memoria para um vetor do tipo float, de acordo com a quantidade de elementos 

for (int i = 0; i<n; i++){
   printf("digite o %dº valor:\n", i+1);
   scanf("%f",&p[i]);
}

qsort(p,n,sizeof(float),compare);//ordena o vetor do tipo float

printf("Valores digitados em ordem crescente: \n");
for (int d = 0; d<n; d++){
   printf("%f \n", p[d]);//mostra os valores em ordem crescente
}

free(p);//libera a função malloc usada para alocar o vetor p 

return 0;
}
